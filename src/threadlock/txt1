what is the difference between a thread and a process?
they are related, but fundamentally different.
a process can be thought of as an instance of a program in execution.
a process is an independent entity to which system
resources(e.g. CPU time and memory) are allocated. 
each process is executed in a separate address space, 
and one process cannot access the variables and data 
structures of another process. if a process wishes to access
another process' resources, inter-process communications have
to be used. these include pipes, sockets, and other forms.

a thread exists within a process and shares the process's 
resources(including its heap space). multiple threads within
the same process will share the same heap space. this is
very different from processes, which cannot directly access
the memory of another process. each thread still has its own registers
and its own stack, but other threads can read and write
the heap memory.

a thread is a particular execution path of a process. when
one thread modifies a process resources, the change is
immediately visible to sibling threads.
